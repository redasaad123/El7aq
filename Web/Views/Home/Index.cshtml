@using Microsoft.AspNetCore.Identity
@using Core.Entities
@inject SignInManager<AppUsers> SignInManager

@{
    ViewData["Title"] = "El7aq - Smart Transportation";
    var stations = ViewBag.Stations as List<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem> ?? new List<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>();
}

<div class="floating-elements"></div>

<!-- Hero Section -->
<section class="hero" id="hero">
    <div class="hero-content">
        <h1>Smart <span class="highlight">Transportation</span> Made Simple</h1>
        <p>Experience seamless travel with our comprehensive transportation management system. Book, track, and manage your journeys with ease.</p>
        
        <div class="hero-actions">
            <a asp-controller="Passenger" asp-action="Booking" class="btn btn-primary" style="font-size: 1.1rem; padding: 1rem 2rem;">Nearest station</a>
            <a href="#features" class="btn btn-outline" style="font-size: 1.1rem; padding: 1rem 2rem;">Learn More</a>
        </div>
        
        <div class="hero-stats">
            <div class="stat-item">
                <span class="stat-number">50K+</span>
                <span class="stat-label">Happy Passengers</span>
            </div>
            <div class="stat-item">
                <span class="stat-number">200+</span>
                <span class="stat-label">Routes</span>
            </div>
            <div class="stat-item">
                <span class="stat-number">98%</span>
                <span class="stat-label">On-Time Rate</span>
            </div>
        </div>
    </div>
    
    <div class="hero-visual">
        <div class="booking-card">
            <div class="booking-form">
                <h3>Quick Trip Search</h3>
                <form asp-controller="Home" asp-action="SearchTrips" method="post">
                    <div class="form-group">
                        <label for="OriginStationId">From</label>
                        <select class="form-control" id="OriginStationId" name="OriginStationId" required>
                            <option value="">Select departure station</option>
                            @foreach (var station in stations)
                            {
                                <option value="@station.Value">@station.Text</option>
                            }
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="DestinationStationId">To</label>
                        <select class="form-control" id="DestinationStationId" name="DestinationStationId" required>
                            <option value="">Select destination</option>
                            @foreach (var station in stations)
                            {
                                <option value="@station.Value">@station.Text</option>
                            }
                        </select>
                    </div>

                    <button type="submit" class="btn btn-primary" style="width: 100%; margin-top: 1rem;">Search Trips</button>
                </form>
            </div>
        </div>
    </div>
</section>

<!-- Dashboard Preview (shown when user is logged in) -->
@if (SignInManager.IsSignedIn(User))
{
    <section class="dashboard-preview" id="dashboard-preview">
        <div class="dashboard-header">
            <div>
                <h2>Welcome back, @User.FindFirst("FirstName")?.Value! 👋</h2>
                <p style="color: var(--text-light);">Here's what's happening with your account</p>
            </div>
        </div>
    
    <div class="quick-actions">
            <a asp-controller="Passenger" asp-action="Booking" class="action-card" style="text-decoration: none; color: inherit;">
            <div class="feature-icon" style="margin-bottom: 1rem;">🚌</div>
            <h3>Book New Trip</h3>
            <p>Find and book your next journey</p>
        </a>
        <a asp-controller="Passenger" asp-action="MyBookings" class="action-card" style="text-decoration: none; color: inherit;">
            <div class="feature-icon" style="margin-bottom: 1rem;">📋</div>
            <h3>My Bookings</h3>
            <p>View and manage reservations</p>
        </a>
        <a asp-controller="Passenger" asp-action="ActiveBookings" class="action-card" style="text-decoration: none; color: inherit;">
            <div class="feature-icon" style="margin-bottom: 1rem;">📍</div>
            <h3>Active Trips</h3>
            <p>View your upcoming journeys</p>
        </a>
        <a href="#" class="action-card" style="text-decoration: none; color: inherit;">
            <div class="feature-icon" style="margin-bottom: 1rem;">💳</div>
            <h3>Payment History</h3>
            <p>View transactions & receipts</p>
        </a>
    </div>
    </section>
}

<!-- Features Section -->
<section class="features" id="features">
    <div class="section-header">
        <h2>Why Choose El7aq?</h2>
        <p>Discover the features that make us the preferred choice for thousands of travelers</p>
    </div>
    
    <div class="features-grid">
        <div class="feature-card">
            <div class="feature-icon">🚌</div>
            <h3>Easy Booking</h3>
            <p>Book your trips in just a few clicks with our intuitive interface and real-time seat availability.</p>
        </div>
        
        <div class="feature-card">
            <div class="feature-icon">📍</div>
            <h3>Real-Time Tracking</h3>
            <p>Track your bus location, get arrival notifications, and never miss your ride again.</p>
        </div>
        
        <div class="feature-card">
            <div class="feature-icon">💳</div>
            <h3>Secure Payments</h3>
            <p>Multiple payment options with bank-level security. Easy refunds and transparent pricing.</p>
        </div>
        
        <div class="feature-card">
            <div class="feature-icon">📱</div>
            <h3>Mobile First</h3>
            <p>Optimized mobile experience that works seamlessly across all devices and platforms.</p>
        </div>
        
        <div class="feature-card">
            <div class="feature-icon">🎫</div>
            <h3>Digital Tickets</h3>
            <p>No more paper tickets. Everything stored securely in your digital wallet.</p>
        </div>
        
        <div class="feature-card">
            <div class="feature-icon">🚗</div>
            <h3>Driver Portal</h3>
            <p>Dedicated tools for drivers to manage routes, update status, and communicate efficiently.</p>
        </div>
    </div>
</section>



@section Scripts {
    <script>
        // Smooth scroll for anchor links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                if (this.getAttribute('href').startsWith('#') && this.getAttribute('href').length > 1) {
                    e.preventDefault();
                    const target = document.querySelector(this.getAttribute('href'));
                    if (target) {
                        target.scrollIntoView({
                            behavior: 'smooth'
                        });
                    }
                }
            });
        });

        // Header scroll effect
        window.addEventListener('scroll', function() {
            const header = document.querySelector('.header');
            const body = document.body;
            const isDarkMode = body.getAttribute('data-theme') === 'dark';
            
            if (header) {
                if (window.scrollY > 100) {
                    if (isDarkMode) {
                        header.style.background = 'rgba(30, 30, 30, 0.98)';
                        header.style.boxShadow = '0 2px 20px rgba(0, 0, 0, 0.3)';
                    } else {
                        header.style.background = 'rgba(255, 255, 255, 0.98)';
                        header.style.boxShadow = '0 2px 20px rgba(39, 170, 226, 0.15)';
                    }
                } else {
                    if (isDarkMode) {
                        header.style.background = 'rgba(30, 30, 30, 0.95)';
                        header.style.boxShadow = '0 2px 20px rgba(0, 0, 0, 0.3)';
                    } else {
                        header.style.background = 'rgba(255, 255, 255, 0.95)';
                        header.style.boxShadow = '0 2px 20px rgba(39, 170, 226, 0.1)';
                    }
                }
            }
        });

        // Update header when dark mode is toggled
        function updateHeaderForTheme() {
            const header = document.querySelector('.header');
            const body = document.body;
            const isDarkMode = body.getAttribute('data-theme') === 'dark';
            
            if (header) {
                if (window.scrollY > 100) {
                    if (isDarkMode) {
                        header.style.background = 'rgba(30, 30, 30, 0.98)';
                        header.style.boxShadow = '0 2px 20px rgba(0, 0, 0, 0.3)';
                    } else {
                        header.style.background = 'rgba(255, 255, 255, 0.98)';
                        header.style.boxShadow = '0 2px 20px rgba(39, 170, 226, 0.15)';
                    }
                } else {
                    if (isDarkMode) {
                        header.style.background = 'rgba(30, 30, 30, 0.95)';
                        header.style.boxShadow = '0 2px 20px rgba(0, 0, 0, 0.3)';
                    } else {
                        header.style.background = 'rgba(255, 255, 255, 0.95)';
                        header.style.boxShadow = '0 2px 20px rgba(39, 170, 226, 0.1)';
                    }
                }
            }
        }

        // Listen for dark mode toggle
        const darkModeToggle = document.getElementById('headerDarkModeToggle');
        if (darkModeToggle) {
            darkModeToggle.addEventListener('click', function() {
                setTimeout(updateHeaderForTheme, 100);
            });
        }

        // Prevent selecting same station for origin and destination
        document.getElementById('OriginStationId').addEventListener('change', function() {
            const destinationSelect = document.getElementById('DestinationStationId');
            const selectedOrigin = this.value;
            
            // Enable all destination options first
            for (let option of destinationSelect.options) {
                option.disabled = false;
            }
            
            // Disable the selected origin in destination dropdown
            if (selectedOrigin) {
                for (let option of destinationSelect.options) {
                    if (option.value === selectedOrigin && option.value !== '') {
                        option.disabled = true;
                    }
                }
                
                // Clear destination if it matches origin
                if (destinationSelect.value === selectedOrigin) {
                    destinationSelect.value = '';
                }
            }
        });

        document.getElementById('DestinationStationId').addEventListener('change', function() {
            const originSelect = document.getElementById('OriginStationId');
            const selectedDestination = this.value;
            
            // Enable all origin options first
            for (let option of originSelect.options) {
                option.disabled = false;
            }
            
            // Disable the selected destination in origin dropdown
            if (selectedDestination) {
                for (let option of originSelect.options) {
                    if (option.value === selectedDestination && option.value !== '') {
                        option.disabled = true;
                    }
                }
                
                // Clear origin if it matches destination
                if (originSelect.value === selectedDestination) {
                    originSelect.value = '';
                }
            }
        });
    </script>
}