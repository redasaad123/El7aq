<!DOCTYPE html>
<html lang="ar">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>أقرب السائقين</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            direction: rtl;
            text-align: right;
            background-color: #f5f5f5;
            margin: 0;
            padding: 20px;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            background-color: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        h2 {
            color: #333;
            text-align: center;
            margin-bottom: 30px;
        }

        .input-group {
            margin-bottom: 15px;
        }

        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            color: #555;
        }

        input[type="number"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 16px;
            box-sizing: border-box;
        }

        button {
            background-color: #007bff;
            color: white;
            padding: 12px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            margin-top: 10px;
            transition: background-color 0.3s;
        }

            button:hover {
                background-color: #0056b3;
            }

            button:disabled {
                background-color: #ccc;
                cursor: not-allowed;
            }

        .get-location-btn {
            background-color: #28a745;
            margin-left: 10px;
        }

            .get-location-btn:hover {
                background-color: #1e7e34;
            }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            background-color: white;
        }

        th, td {
            padding: 12px;
            border: 1px solid #ddd;
            text-align: center;
        }

        th {
            background-color: #007bff;
            color: white;
            font-weight: bold;
        }

        tr:nth-child(even) {
            background-color: #f8f9fa;
        }

        tr:hover {
            background-color: #e3f2fd;
        }

        .loading {
            text-align: center;
            color: #007bff;
            font-style: italic;
            margin-top: 20px;
        }

        .error {
            color: #dc3545;
            background-color: #f8d7da;
            padding: 10px;
            border-radius: 5px;
            margin-top: 10px;
        }

        .success {
            color: #155724;
            background-color: #d4edda;
            padding: 10px;
            border-radius: 5px;
            margin-top: 10px;
        }

        .coordinates {
            display: flex;
            gap: 15px;
        }

            .coordinates .input-group {
                flex: 1;
            }

        .buttons-container {
            display: flex;
            gap: 10px;
            align-items: center;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>البحث عن أقرب السائقين</h2>

        <div class="coordinates">
            <div class="input-group">
                <label for="lat">خط العرض (Latitude):</label>
                <input type="number" id="lat" step="any" placeholder="30.0444" />
            </div>
            <div class="input-group">
                <label for="lon">خط الطول (Longitude):</label>
                <input type="number" id="lon" step="any" placeholder="31.2357" />
            </div>
        </div>

        <div class="buttons-container">
            <button id="findDrivers">البحث عن السائقين</button>
            <button id="getCurrentLocation" class="get-location-btn">الحصول على موقعي الحالي</button>
        </div>

        <div id="statusMessage"></div>

        <table id="driversTable" style="display:none;">
            <thead>
                <tr>
                    <th>رقم السيارة</th>
                    <th>المسافة (كم)</th>
                    <th>المنطقة</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>

    <script>
        document.getElementById("getCurrentLocation").addEventListener("click", () => {
            const statusDiv = document.getElementById("statusMessage");
            if (!navigator.geolocation) return showMessage("المتصفح لا يدعم خدمة تحديد المواقع", "error");

            statusDiv.innerHTML = '<div class="loading">جاري الحصول على الموقع...</div>';
            navigator.geolocation.getCurrentPosition(
                (pos) => {
                    document.getElementById("lat").value = pos.coords.latitude.toFixed(6);
                    document.getElementById("lon").value = pos.coords.longitude.toFixed(6);
                    showMessage("تم الحصول على الموقع بنجاح", "success");
                },
                (err) => {
                    let msg = "فشل في الحصول على الموقع: ";
                    switch(err.code){
                        case err.PERMISSION_DENIED: msg+="تم رفض إذن الوصول للموقع"; break;
                        case err.POSITION_UNAVAILABLE: msg+="الموقع غير متاح"; break;
                        case err.TIMEOUT: msg+="انتهت مهلة الطلب"; break;
                        default: msg+="خطأ غير معروف"; break;
                    }
                    showMessage(msg,"error");
                }
            );
        });

        document.getElementById("findDrivers").addEventListener("click", async () => {
            const lat = parseFloat(document.getElementById("lat").value);
            const lon = parseFloat(document.getElementById("lon").value);
            const btn = document.getElementById("findDrivers");

            if(isNaN(lat) || isNaN(lon)) return showMessage("برجاء إدخال إحداثيات صحيحة","error");

            if(lat<22 || lat>32 || lon<25 || lon>37) showMessage("تحذير: الإحداثيات خارج نطاق مصر","error");

            btn.disabled = true; btn.textContent="جاري البحث...";
            document.getElementById("statusMessage").innerHTML='<div class="loading">جاري البحث عن أقرب السائقين...</div>';

            try {
                const resp = await fetch('/Location/GetNearestDrivers', {
                    method:'POST',
                    headers: {'Content-Type':'application/json','X-Requested-With':'XMLHttpRequest'},
                    body: JSON.stringify({ Lat:lat, Long:lon })
                });
                if(!resp.ok) throw new Error(`HTTP ${resp.status}`);
                const data = await resp.json();
                displayDrivers(data);
            } catch(e){
                console.error(e); showMessage("حدث خطأ أثناء البحث عن السائقين. حاول مرة أخرى","error");
            } finally{
                btn.disabled=false; btn.textContent="البحث عن السائقين";
            }
        });

        function displayDrivers(drivers){
            const tbody = document.querySelector("#driversTable tbody");
            tbody.innerHTML = "";
            const table = document.getElementById("driversTable");

            if(!drivers || drivers.length===0){
                showMessage("لم يتم العثور على سائقين في المنطقة المحددة","error");
                table.style.display="none"; return;
            }

            drivers.forEach((driver,index)=>{
                const row = document.createElement("tr");
                row.innerHTML=`<td>${driver.CarNumber||'غير محدد'}</td>
                               <td>${driver.DistanceKm||0} كم</td>
                               <td>${driver.Address||'العنوان غير متوفر'}</td>`;
                if(index===0){ row.style.backgroundColor="#d4edda"; row.style.fontWeight="bold"; }
                tbody.appendChild(row);
            });

            table.style.display="table";
            showMessage(`تم العثور على ${drivers.length} سائق(ين)`,"success");
        }

        function showMessage(msg,type){
            const statusDiv = document.getElementById("statusMessage");
            statusDiv.innerHTML=`<div class="${type}">${msg}</div>`;
            if(type==="success") setTimeout(()=>{statusDiv.innerHTML="";},5000);
        }

        document.addEventListener("keypress",(e)=>{if(e.key==="Enter") document.getElementById("findDrivers").click();});
    </script>
</body>
</html>
