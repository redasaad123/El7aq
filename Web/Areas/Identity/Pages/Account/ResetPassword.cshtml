@page
@model ResetPasswordModel
@{
    ViewData["Title"] = "Reset password";
}

<section class="form-container col-12" aria-label="Reset Password Form Section">
    <div class="form-container-div col-4">
        <!-- Header with Logo -->
        <div class="auth-header">
            <div class="logo-container">
                <img src="~/images/elhaq.jpg" alt="El7aq Logo" class="auth-logo" />
                <h2>Reset Your Password</h2>
                <p class="auth-subtitle">Enter your new password below</p>
            </div>
        </div>

        <!-- Validation Summary -->
        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert" style="display: none;">
            <i class="fas fa-exclamation-triangle me-2"></i>
            <span id="validation-summary-text"></span>
        </div>

        <form id="reset-password-form" method="post" novalidate>
            <!-- Email Field (Read-only) -->
            <div class="form-group mb-3">
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="fas fa-envelope"></i>
                    </span>
                    <input asp-for="Input.Email" 
                           type="email" 
                           class="form-control" 
                           readonly />
                </div>
                <small class="form-text text-muted">Email verified ✓</small>
            </div>

            <!-- New Password Field -->
            <div class="form-group mb-3">
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="fas fa-lock"></i>
                    </span>
                    <input asp-for="Input.Password" 
                           type="password" 
                           placeholder="New Password" 
                           aria-label="New Password" 
                           class="form-control" 
                           autocomplete="new-password"
                           required />
                    <button type="button" class="btn btn-outline-secondary" id="togglePassword" title="Show/Hide Password">
                        <i class="fas fa-eye" id="togglePasswordIcon"></i>
                    </button>
                </div>
                <span asp-validation-for="Input.Password" class="text-danger validation-message"></span>
                <small class="form-text text-muted">Password must be at least 6 characters long.</small>
            </div>

            <!-- Confirm Password Field -->
            <div class="form-group mb-3">
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="fas fa-lock"></i>
                    </span>
                    <input asp-for="Input.ConfirmPassword" 
                           type="password" 
                           placeholder="Confirm New Password" 
                           aria-label="Confirm New Password" 
                           class="form-control" 
                           autocomplete="new-password"
                           required />
                    <button type="button" class="btn btn-outline-secondary" id="toggleConfirmPassword" title="Show/Hide Password">
                        <i class="fas fa-eye" id="toggleConfirmPasswordIcon"></i>
                    </button>
                </div>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger validation-message"></span>
            </div>

            <!-- Submit Button -->
            <div class="form-group">
                <button id="reset-password-submit" type="submit" class="btn btn-primary btn-lg w-100">
                    <span class="btn-text">Reset Password</span>
                    <span class="btn-spinner" style="display: none;">
                        <i class="fas fa-spinner fa-spin me-2"></i>Resetting...
                    </span>
                </button>
            </div>

            <!-- Back to Login Link -->
            <div class="sub-text text-center mt-3">
                Remember your password? 
                <a asp-page="./Login" class="signup-link">
                    Back to Login
                </a>
            </div>
        </form>
    </div>
</section>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Password toggle functionality
            const togglePassword = document.getElementById('togglePassword');
            const passwordInput = document.querySelector('input[name="Input.Password"]');
            const togglePasswordIcon = document.getElementById('togglePasswordIcon');

            if (togglePassword && passwordInput) {
                togglePassword.addEventListener('click', function() {
                    const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                    passwordInput.setAttribute('type', type);
                    togglePasswordIcon.classList.toggle('fa-eye');
                    togglePasswordIcon.classList.toggle('fa-eye-slash');
                });
            }

            // Confirm Password toggle functionality
            const toggleConfirmPassword = document.getElementById('toggleConfirmPassword');
            const confirmPasswordInput = document.querySelector('input[name="Input.ConfirmPassword"]');
            const toggleConfirmPasswordIcon = document.getElementById('toggleConfirmPasswordIcon');

            if (toggleConfirmPassword && confirmPasswordInput) {
                toggleConfirmPassword.addEventListener('click', function() {
                    const type = confirmPasswordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                    confirmPasswordInput.setAttribute('type', type);
                    toggleConfirmPasswordIcon.classList.toggle('fa-eye');
                    toggleConfirmPasswordIcon.classList.toggle('fa-eye-slash');
                });
            }

            // Form submission with loading state
            const form = document.getElementById('reset-password-form');
            const submitButton = document.getElementById('reset-password-submit');
            const btnText = document.querySelector('.btn-text');
            const btnSpinner = document.querySelector('.btn-spinner');

            if (form && submitButton) {
                form.addEventListener('submit', function() {
                    submitButton.disabled = true;
                    btnText.style.display = 'none';
                    btnSpinner.style.display = 'inline';
                });
            }

            // Show validation summary if there are errors
            const validationSummary = document.querySelector('.alert-danger');
            const validationErrors = document.querySelectorAll('.validation-message');
            
            if (validationSummary && validationErrors.length > 0) {
                const hasErrors = Array.from(validationErrors).some(error => error.textContent.trim() !== '');
                if (hasErrors) {
                    validationSummary.style.display = 'block';
                    const errorTexts = Array.from(validationErrors)
                        .filter(error => error.textContent.trim() !== '')
                        .map(error => error.textContent.trim());
                    document.getElementById('validation-summary-text').textContent = errorTexts.join(', ');
                }
            }

            // Real-time validation feedback
            const inputs = form.querySelectorAll('input[required]');
            inputs.forEach(input => {
                input.addEventListener('blur', function() {
                    validateField(this);
                });
            });

            // Password matching validation
            confirmPasswordInput.addEventListener('input', function() {
                const password = passwordInput.value;
                const confirmPassword = this.value;
                const errorSpan = this.parentElement.parentElement.querySelector('.validation-message');
                
                if (confirmPassword && password !== confirmPassword) {
                    errorSpan.textContent = 'The password and confirmation password do not match.';
                    this.classList.add('is-invalid');
                    this.classList.remove('is-valid');
                } else if (confirmPassword) {
                    errorSpan.textContent = '';
                    this.classList.remove('is-invalid');
                    this.classList.add('is-valid');
                }
            });

            function validateField(field) {
                const errorSpan = field.parentElement.parentElement.querySelector('.validation-message');
                if (errorSpan) {
                    if (field.checkValidity()) {
                        errorSpan.textContent = '';
                        field.classList.remove('is-invalid');
                        field.classList.add('is-valid');
                    } else {
                        field.classList.remove('is-valid');
                        field.classList.add('is-invalid');
                    }
                }
            }
        });
    </script>
}
