// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250906112028_admin")]
    partial class admin
    {
        /// <inheritdoc />
//        protected override void BuildTargetModel(ModelBuilder modelBuilder)
//        {
//#pragma warning disable 612, 618
//            modelBuilder
//                .HasAnnotation("ProductVersion", "8.0.15")
//                .HasAnnotation("Relational:MaxIdentifierLength", 128);

//            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

//            modelBuilder.Entity("Core.Entities.AppUsers", b =>
//                {
//                    b.Property<string>("Id")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<int>("AccessFailedCount")
//                        .HasColumnType("int");

//                    b.Property<string>("ConcurrencyStamp")
//                        .IsConcurrencyToken()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("Email")
//                        .HasMaxLength(256)
//                        .HasColumnType("nvarchar(256)");

//                    b.Property<bool>("EmailConfirmed")
//                        .HasColumnType("bit");

//                    b.Property<string>("FirstName")
//                        .IsRequired()
//                        .HasMaxLength(100)
//                        .HasColumnType("nvarchar(100)");

//                    b.Property<string>("LastName")
//                        .IsRequired()
//                        .HasMaxLength(100)
//                        .HasColumnType("nvarchar(100)");

//                    b.Property<bool>("LockoutEnabled")
//                        .HasColumnType("bit");

//                    b.Property<DateTimeOffset?>("LockoutEnd")
//                        .HasColumnType("datetimeoffset");

//                    b.Property<string>("NormalizedEmail")
//                        .HasMaxLength(256)
//                        .HasColumnType("nvarchar(256)");

//                    b.Property<string>("NormalizedUserName")
//                        .HasMaxLength(256)
//                        .HasColumnType("nvarchar(256)");

//                    b.Property<string>("PasswordHash")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("PhoneNumber")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<bool>("PhoneNumberConfirmed")
//                        .HasColumnType("bit");

//                    b.Property<string>("SecurityStamp")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<bool>("TwoFactorEnabled")
//                        .HasColumnType("bit");

//                    b.Property<string>("UserName")
//                        .HasMaxLength(256)
//                        .HasColumnType("nvarchar(256)");

//                    b.HasKey("Id");

//                    b.HasIndex("NormalizedEmail")
//                        .HasDatabaseName("EmailIndex");

//                    b.HasIndex("NormalizedUserName")
//                        .IsUnique()
//                        .HasDatabaseName("UserNameIndex")
//                        .HasFilter("[NormalizedUserName] IS NOT NULL");

//                    b.ToTable("Users", "security");
//                });

//            modelBuilder.Entity("Core.Entities.Booking", b =>
//                {
//                    b.Property<string>("Id")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<DateTime>("BookingDate")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("PassengerId")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<int>("Status")
//                        .HasColumnType("int");

//                    b.Property<string>("TripId")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.HasKey("Id");

//                    b.HasIndex("PassengerId");

//                    b.HasIndex("TripId");

//                    b.ToTable("Bookings");

//                    b.HasData(
//                        new
//                        {
//                            Id = "B1",
//                            BookingDate = new DateTime(2025, 9, 6, 11, 20, 27, 746, DateTimeKind.Utc).AddTicks(5659),
//                            PassengerId = "P1",
//                            Status = 0,
//                            TripId = "T1"
//                        },
//                        new
//                        {
//                            Id = "B3",
//                            BookingDate = new DateTime(2025, 9, 6, 11, 20, 27, 746, DateTimeKind.Utc).AddTicks(5664),
//                            PassengerId = "P1",
//                            Status = 0,
//                            TripId = "T1"
//                        },
//                        new
//                        {
//                            Id = "B2",
//                            BookingDate = new DateTime(2025, 9, 6, 11, 20, 27, 746, DateTimeKind.Utc).AddTicks(5689),
//                            PassengerId = "P1",
//                            Status = 0,
//                            TripId = "T1"
//                        });
//                });

//            modelBuilder.Entity("Core.Entities.DriverProfile", b =>
//                {
//                    b.Property<string>("Id")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("CarNumber")
//                        .IsRequired()
//                        .HasMaxLength(50)
//                        .HasColumnType("nvarchar(50)");

//                    b.Property<string>("LicenseNumber")
//                        .IsRequired()
//                        .HasMaxLength(50)
//                        .HasColumnType("nvarchar(50)");

//                    b.Property<string>("UserId")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.HasKey("Id");

//                    b.HasIndex("UserId")
//                        .IsUnique();

//                    b.ToTable("Drivers");

//                    b.HasData(
//                        new
//                        {
//                            Id = "D1",
//                            CarNumber = "CAR123",
//                            LicenseNumber = "LIC123",
//                            UserId = "1d9f8228-d327-4d93-9cfc-02835fd7bbf4"
//                        });
//                });

//            modelBuilder.Entity("Core.Entities.Notification", b =>
//                {
//                    b.Property<string>("Id")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<DateTime>("CreatedAt")
//                        .HasColumnType("datetime2");

//                    b.Property<bool>("IsRead")
//                        .HasColumnType("bit");

//                    b.Property<string>("Message")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("PassengerProfileId")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("UserId")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.HasKey("Id");

//                    b.HasIndex("PassengerProfileId");

//                    b.HasIndex("UserId");

//                    b.ToTable("Notifications");

//                    b.HasData(
//                        new
//                        {
//                            Id = "c256976f-8329-49dd-89d5-8de41f8a3b1e",
//                            CreatedAt = new DateTime(2025, 9, 6, 11, 20, 27, 746, DateTimeKind.Utc).AddTicks(5769),
//                            IsRead = true,
//                            Message = "Welcome to El7aq! Your account was created successfully.",
//                            UserId = "95e8cc4e-2c7d-41eb-a292-0c18c66dd2bc"
//                        },
//                        new
//                        {
//                            Id = "e7463b17-c048-416e-98ac-710c1402a661",
//                            CreatedAt = new DateTime(2025, 9, 6, 11, 5, 27, 746, DateTimeKind.Utc).AddTicks(5774),
//                            IsRead = false,
//                            Message = "Your first booking is pending confirmation.",
//                            UserId = "95e8cc4e-2c7d-41eb-a292-0c18c66dd2bc"
//                        },
//                        new
//                        {
//                            Id = "a0629f67-1b6b-48f9-86ed-93bdb165420f",
//                            CreatedAt = new DateTime(2025, 9, 6, 11, 40, 27, 746, DateTimeKind.Utc).AddTicks(5781),
//                            IsRead = false,
//                            Message = "ay 7aga 1111.",
//                            UserId = "95e8cc4e-2c7d-41eb-a292-0c18c66dd2bc"
//                        },
//                        new
//                        {
//                            Id = "684966c2-802e-4502-ad40-e5e219ed1bba",
//                            CreatedAt = new DateTime(2025, 9, 6, 11, 15, 27, 746, DateTimeKind.Utc).AddTicks(5786),
//                            IsRead = false,
//                            Message = "ay 7aga 22222.",
//                            UserId = "95e8cc4e-2c7d-41eb-a292-0c18c66dd2bc"
//                        });
//                });

//            modelBuilder.Entity("Core.Entities.PassengerProfile", b =>
//                {
//                    b.Property<string>("Id")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("UserId")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.HasKey("Id");

//                    b.HasIndex("UserId")
//                        .IsUnique();

//                    b.ToTable("Passengers");

//                    b.HasData(
//                        new
//                        {
//                            Id = "P1",
//                            UserId = "207a1b24-2482-4c8e-8972-bb587f5d8287"
//                        });
//                });

//            modelBuilder.Entity("Core.Entities.Route", b =>
//                {
//                    b.Property<string>("Id")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("EndStationId")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<decimal>("Price")
//                        .HasColumnType("decimal(18,2)");

//                    b.Property<string>("StartStationId")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.HasKey("Id");

//                    b.HasIndex("EndStationId");

//                    b.HasIndex("StartStationId");

//                    b.ToTable("Routes");
//                });

//            modelBuilder.Entity("Core.Entities.StaffProfile", b =>
//                {
//                    b.Property<string>("Id")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("StationId")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("UserId")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.HasKey("Id");

//                    b.HasIndex("StationId");

//                    b.HasIndex("UserId")
//                        .IsUnique();

//                    b.ToTable("Staffs");
//                });

//            modelBuilder.Entity("Core.Entities.Station", b =>
//                {
//                    b.Property<string>("Id")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("City")
//                        .IsRequired()
//                        .HasMaxLength(100)
//                        .HasColumnType("nvarchar(100)");

//                    b.Property<string>("Name")
//                        .IsRequired()
//                        .HasMaxLength(100)
//                        .HasColumnType("nvarchar(100)");

//                    b.HasKey("Id");

//                    b.ToTable("Stations");
//                });

//            modelBuilder.Entity("Core.Entities.Trip", b =>
//                {
//                    b.Property<string>("Id")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<int>("AvailableSeats")
//                        .HasColumnType("int");

//                    b.Property<string>("DriverId")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("RouteId")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.HasKey("Id");

//                    b.HasIndex("DriverId");

//                    b.HasIndex("RouteId");

//                    b.ToTable("Trips");
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
//                {
//                    b.Property<string>("Id")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("ConcurrencyStamp")
//                        .IsConcurrencyToken()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("Name")
//                        .HasMaxLength(256)
//                        .HasColumnType("nvarchar(256)");

//                    b.Property<string>("NormalizedName")
//                        .HasMaxLength(256)
//                        .HasColumnType("nvarchar(256)");

//                    b.HasKey("Id");

//                    b.HasIndex("NormalizedName")
//                        .IsUnique()
//                        .HasDatabaseName("RoleNameIndex")
//                        .HasFilter("[NormalizedName] IS NOT NULL");

//                    b.ToTable("Roles", "security");
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

//                    b.Property<string>("ClaimType")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("ClaimValue")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("RoleId")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.HasKey("Id");

//                    b.HasIndex("RoleId");

//                    b.ToTable("RoleClaim", "security");
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

//                    b.Property<string>("ClaimType")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("ClaimValue")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("UserId")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.HasKey("Id");

//                    b.HasIndex("UserId");

//                    b.ToTable("UserClaim", "security");
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
//                {
//                    b.Property<string>("LoginProvider")
//                        .HasMaxLength(128)
//                        .HasColumnType("nvarchar(128)");

//                    b.Property<string>("ProviderKey")
//                        .HasMaxLength(128)
//                        .HasColumnType("nvarchar(128)");

//                    b.Property<string>("ProviderDisplayName")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("UserId")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.HasKey("LoginProvider", "ProviderKey");

//                    b.HasIndex("UserId");

//                    b.ToTable("UserLogin", "security");
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
//                {
//                    b.Property<string>("UserId")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("RoleId")
//                        .HasColumnType("nvarchar(450)");

//                    b.HasKey("UserId", "RoleId");

//                    b.HasIndex("RoleId");

//                    b.ToTable("UserRole", "security");
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
//                {
//                    b.Property<string>("UserId")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("LoginProvider")
//                        .HasMaxLength(128)
//                        .HasColumnType("nvarchar(128)");

//                    b.Property<string>("Name")
//                        .HasMaxLength(128)
//                        .HasColumnType("nvarchar(128)");

//                    b.Property<string>("Value")
//                        .HasColumnType("nvarchar(max)");

//                    b.HasKey("UserId", "LoginProvider", "Name");

//                    b.ToTable("UserToken", "security");
//                });

//            modelBuilder.Entity("Payment", b =>
//                {
//                    b.Property<string>("Id")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<decimal>("Amount")
//                        .HasColumnType("decimal(18,2)");

//                    b.Property<string>("BookingId")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<DateTime>("CreatedAt")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("Currency")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<int>("Method")
//                        .HasColumnType("int");

//                    b.Property<string>("PassengerId")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<int>("Status")
//                        .HasColumnType("int");

//                    b.Property<string>("TransactionReference")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.HasKey("Id");

//                    b.HasIndex("BookingId");

//                    b.HasIndex("PassengerId");

//                    b.ToTable("Payments");
//                });

//            modelBuilder.Entity("Core.Entities.Booking", b =>
//                {
//                    b.HasOne("Core.Entities.PassengerProfile", "Passenger")
//                        .WithMany("Bookings")
//                        .HasForeignKey("PassengerId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("Core.Entities.Trip", "Trip")
//                        .WithMany("Bookings")
//                        .HasForeignKey("TripId")
//                        .OnDelete(DeleteBehavior.Restrict)
//                        .IsRequired();

//                    b.Navigation("Passenger");

//                    b.Navigation("Trip");
//                });

//            modelBuilder.Entity("Core.Entities.DriverProfile", b =>
//                {
//                    b.HasOne("Core.Entities.AppUsers", "appUsers")
//                        .WithOne()
//                        .HasForeignKey("Core.Entities.DriverProfile", "UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("appUsers");
//                });

//            modelBuilder.Entity("Core.Entities.Notification", b =>
//                {
//                    b.HasOne("Core.Entities.PassengerProfile", null)
//                        .WithMany("Notifications")
//                        .HasForeignKey("PassengerProfileId");

//                    b.HasOne("Core.Entities.AppUsers", "User")
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("User");
//                });

//            modelBuilder.Entity("Core.Entities.PassengerProfile", b =>
//                {
//                    b.HasOne("Core.Entities.AppUsers", "User")
//                        .WithOne()
//                        .HasForeignKey("Core.Entities.PassengerProfile", "UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("User");
//                });

//            modelBuilder.Entity("Core.Entities.Route", b =>
//                {
//                    b.HasOne("Core.Entities.Station", "EndStation")
//                        .WithMany("RoutesTo")
//                        .HasForeignKey("EndStationId")
//                        .OnDelete(DeleteBehavior.Restrict)
//                        .IsRequired();

//                    b.HasOne("Core.Entities.Station", "StartStation")
//                        .WithMany("RoutesFrom")
//                        .HasForeignKey("StartStationId")
//                        .OnDelete(DeleteBehavior.Restrict)
//                        .IsRequired();

//                    b.Navigation("EndStation");

//                    b.Navigation("StartStation");
//                });

//            modelBuilder.Entity("Core.Entities.StaffProfile", b =>
//                {
//                    b.HasOne("Core.Entities.Station", "Station")
//                        .WithMany("Staff")
//                        .HasForeignKey("StationId")
//                        .OnDelete(DeleteBehavior.Restrict)
//                        .IsRequired();

//                    b.HasOne("Core.Entities.AppUsers", "User")
//                        .WithOne()
//                        .HasForeignKey("Core.Entities.StaffProfile", "UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Station");

//                    b.Navigation("User");
//                });

//            modelBuilder.Entity("Core.Entities.Trip", b =>
//                {
//                    b.HasOne("Core.Entities.DriverProfile", "Driver")
//                        .WithMany("Trips")
//                        .HasForeignKey("DriverId")
//                        .OnDelete(DeleteBehavior.Restrict)
//                        .IsRequired();

//                    b.HasOne("Core.Entities.Route", "Route")
//                        .WithMany("Trips")
//                        .HasForeignKey("RouteId")
//                        .OnDelete(DeleteBehavior.Restrict)
//                        .IsRequired();

//                    b.Navigation("Driver");

//                    b.Navigation("Route");
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
//                {
//                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
//                        .WithMany()
//                        .HasForeignKey("RoleId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
//                {
//                    b.HasOne("Core.Entities.AppUsers", null)
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
//                {
//                    b.HasOne("Core.Entities.AppUsers", null)
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
//                {
//                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
//                        .WithMany()
//                        .HasForeignKey("RoleId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("Core.Entities.AppUsers", null)
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
//                {
//                    b.HasOne("Core.Entities.AppUsers", null)
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Payment", b =>
//                {
//                    b.HasOne("Core.Entities.Booking", "Booking")
//                        .WithMany("Payments")
//                        .HasForeignKey("BookingId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("Core.Entities.PassengerProfile", "Passenger")
//                        .WithMany("Payments")
//                        .HasForeignKey("PassengerId")
//                        .OnDelete(DeleteBehavior.Restrict)
//                        .IsRequired();

//                    b.Navigation("Booking");

//                    b.Navigation("Passenger");
//                });

//            modelBuilder.Entity("Core.Entities.Booking", b =>
//                {
//                    b.Navigation("Payments");
//                });

//            modelBuilder.Entity("Core.Entities.DriverProfile", b =>
//                {
//                    b.Navigation("Trips");
//                });

//            modelBuilder.Entity("Core.Entities.PassengerProfile", b =>
//                {
//                    b.Navigation("Bookings");

//                    b.Navigation("Notifications");

//                    b.Navigation("Payments");
//                });

//            modelBuilder.Entity("Core.Entities.Route", b =>
//                {
//                    b.Navigation("Trips");
//                });

//            modelBuilder.Entity("Core.Entities.Station", b =>
//                {
//                    b.Navigation("RoutesFrom");

//                    b.Navigation("RoutesTo");

//                    b.Navigation("Staff");
//                });

//            modelBuilder.Entity("Core.Entities.Trip", b =>
//                {
//                    b.Navigation("Bookings");
//                });
//#pragma warning restore 612, 618
//        }
    }
}
